<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\xunit.runner.visualstudio.2.3.1\build\net20\xunit.runner.visualstudio.props" Condition="Exists('..\packages\xunit.runner.visualstudio.2.3.1\build\net20\xunit.runner.visualstudio.props')" />
  <Import Project="..\packages\xunit.core.2.3.1\build\xunit.core.props" Condition="Exists('..\packages\xunit.core.2.3.1\build\xunit.core.props')" />
  <Import Project="..\packages\Microsoft.DiaSymReader.Native.1.5.0\build\Microsoft.DiaSymReader.Native.props" Condition="Exists('..\packages\Microsoft.DiaSymReader.Native.1.5.0\build\Microsoft.DiaSymReader.Native.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{21DBA1CE-AF55-4159-B04B-B8C621BE8921}</ProjectGuid>
    <OutputType>Library</OutputType>
    <RootNamespace>RefactoringEssentials.Tests</RootNamespace>
    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>..\bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;RE2017;UNIMPLEMENTED_CONVERTER_FEATURE_TESTS</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <AssemblyName>RefactoringEssentials.Tests</AssemblyName>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>..\bin\Release\</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <AssemblyName>RefactoringEssentials.Tests</AssemblyName>
    <DefineConstants>RE2017</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Mono_Debug|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug_Mono.2017</OutputPath>
    <WarningLevel>4</WarningLevel>
    <AssemblyName>Tests</AssemblyName>
    <DefineConstants>RE2017</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Mono_Release|AnyCPU' ">
    <Optimize>false</Optimize>
    <OutputPath>bin\Mono_Release.2017</OutputPath>
    <WarningLevel>4</WarningLevel>
    <AssemblyName>Tests</AssemblyName>
    <DefineConstants>RE2017</DefineConstants>
  </PropertyGroup>
  <PropertyGroup>
    <SignAssembly>false</SignAssembly>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile>
    </AssemblyOriginatorKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(NuGetVersionRoslyn)' == '' ">
    <NuGetVersionRoslyn>2.11.0-beta2-63528-05</NuGetVersionRoslyn>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Numerics" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.ComponentModel.Composition" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(NuGetVersionRoslyn)" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(NuGetVersionRoslyn)" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic" Version="$(NuGetVersionRoslyn)" />
    <PackageReference Include="Microsoft.CodeAnalysis.VisualBasic.Workspaces" Version="$(NuGetVersionRoslyn)" />
    <PackageReference Include="SQLitePCLRaw.bundle_e_sqlite3" Version="1.1.11" />
    <PackageReference Include="xunit">
      <Version>2.4.0</Version>
    </PackageReference>
    <PackageReference Include="xunit.analyzers">
      <Version>0.10.0</Version>
    </PackageReference>
    <PackageReference Include="Microsoft.TestPlatform">
      <Version>15.9.0</Version>
    </PackageReference>
    <PackageReference Include="xunit.runner.visualstudio">
      <Version>2.4.0</Version>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Common\CodeFixTestBase.cs" />
    <Compile Include="Common\CodeRefactoringTestBase.cs" />
    <Compile Include="Common\ConverterTestBase.cs" />
    <Compile Include="Common\DiagnosticTestBase.cs" />
    <Compile Include="Common\Utils.cs" />
    <Compile Include="CSharp\CodeFixes\CS0132StaticConstructorParameterTests.cs" />
    <Compile Include="CSharp\CodeFixes\CS0152DuplicateCaseLabelValueTests.cs" />
    <Compile Include="CSharp\CodeFixes\CS0164LabelHasNotBeenReferencedTests.cs" />
    <Compile Include="CSharp\CodeFixes\CS0759RedundantPartialMethodTests.cs" />
    <Compile Include="CSharp\CodeFixes\CS1105ExtensionMethodMustBeDeclaredStaticTests.cs" />
    <Compile Include="CSharp\CodeFixes\CS1520MethodMustHaveAReturnTypeTests.cs" />
    <Compile Include="CSharp\CodeFixes\CSharpCodeFixTestBase.cs" />
    <Compile Include="CSharp\CodeFixes\InvalidConversionTests.cs" />
    <Compile Include="CSharp\CodeFixes\ReturnMustNotBeFollowedByAnyExpressionCodeFixProviderTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddAnotherAccessorTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddArgumentNameTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddBracesTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddCatchExceptionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddExceptionDescriptionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddNullCheckTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AddOptionalParameterToInvocationTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\AutoLinqSumTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ChangeAccessModifierTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CheckArrayIndexValueTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CheckCollectionIndexValueTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CheckDictionaryKeyValueTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CheckStringBuilderIndexValueTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CheckStringIndexValueTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ComputeConstantValueTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ContractEnsuresNotNullReturnTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ContractRequiresNotNullTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ContractRequiresStringNotNullOrEmptyTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertAnonymousMethodToLambdaTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertBitwiseFlagComparisonToHasFlagsTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertCoalescingToConditionalExpressionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertDoWhileToWhileLoopTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertEqualityOperatorToEqualsTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertEqualityOperatorToReferenceEqualsTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertEqualsToEqualityOperatorTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertExplicitToImplicitImplementationTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertExpressionBodyToStatementBodyTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertForeachToForTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertForToWhileTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertHasFlagsToBitwiseFlagComparisonTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertIfStatementToNullCoalescingExpressionActionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertIfStatementToSwitchStatementTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertImplicitToExplicittImplementationTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertInstanceToStaticMethodCodeRefactoringTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertInterpolatedStringToStringFormatTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertLambdaBodyExpressionToStatementTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertLambdaStatementToExpressionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertLamdaToAnonymousMethodTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertMethodGroupToAnonymousMethodTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertMethodGroupToLambdaTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertMultiplyToShiftTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertReferenceEqualsToEqualityOperatorTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertShiftToMultiplyTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertStatementBodyToExpressionBodyTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertStringFormatToInterpolatedStringTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertSwitchToIfTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertTernaryExpressionToIfStatementCodeRefactoringProviderTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ConvertWhileToDoWhileLoopTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CopyCommentsFromBaseTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CreateChangedEventTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CreateCustomEventImplementationTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CreateDelegateTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CreateEventInvocatorTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CreateIndexerTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CreateOverloadWithoutParameterTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\CSharpCodeRefactoringTestBase.cs" />
    <Compile Include="CSharp\CodeRefactorings\ExtractAnonymousMethodTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ExtractWhileConditionToInternalIfStatementTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\FlipEqualsTargetAndArgumentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\FlipOperatorArguments.cs" />
    <Compile Include="CSharp\CodeRefactorings\FlipRelationalOperatorArgumentsTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\GenerateGetterTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ImportStaticClassWithUsingTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InitializeAutoPropertyFromConstructorParameterTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InitializeFieldFromConstructorParameterTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InitializeReadOnlyAutoPropertyFromConstructorParameterTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InsertAnonymousMethodSignatureTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\IntroduceConstantTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\IntroduceFormatItemTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InvertConditionalOperatorTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InvertLogicalExpressionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\InvokeAsStaticMethodTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\IterateViaForeachTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\JoinLocalVariableDeclarationAndAssignmentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\JoinStringTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\LinqFluentToQueryTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\LinqQueryToFluentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\MergeNestedIfTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\MoveToOuterScopeTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\NegateIsExpressionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\NegateLogicalExpressionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\PutInsideUsingTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\RemoveBracesTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\RemoveCatchExceptionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\RemoveRegionEndRegionDirectivesTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplaceAssignmentWithPostfixExpressionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplaceDirectCastWithSafeCastTest.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplaceOperatorAssignmentWithAssignmentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplacePostfixExpressionWithAssignmentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplacePropertyWithBackingFieldWithAutoPropertyTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplaceSafeCastWithDirectCastTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReplaceWithOperatorAssignmentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ReverseDirectionForForLoopTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\SplitIfWithAndConditionInTwoTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\SplitIfWithOrConditionInTwoTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\SplitLocalVariableDeclarationAndAssignmentTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\SplitStringTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\SplitVariableIntoSeveralOnesTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\ToAbstractVirtualNonVirtualConversionTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\UseAsAndNullCheckTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\UseStringFormatTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\UseSystemEnvironmentNewLineTests.cs" />
    <Compile Include="CSharp\CodeRefactorings\UseSystemStringEmptyTests.cs" />
    <Compile Include="CSharp\Converter\ExpressionTests.cs" />
    <Compile Include="CSharp\Converter\MemberTests.cs" />
    <Compile Include="CSharp\Converter\NamespaceLevelTests.cs" />
    <Compile Include="CSharp\Converter\SpecialConversionTests.cs" />
    <Compile Include="CSharp\Converter\StatementTests.cs" />
    <Compile Include="CSharp\Converter\TypeCastTests.cs" />
    <Compile Include="CSharp\Diagnostics\AccessToStaticMemberViaDerivedTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\AdditionalOfTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\ArrayCreationCanBeReplacedWithArrayInitializerTests.cs" />
    <Compile Include="CSharp\Diagnostics\AvoidAsyncVoidTests.cs" />
    <Compile Include="CSharp\Diagnostics\BaseMemberHasParamsTests.cs" />
    <Compile Include="CSharp\Diagnostics\BaseMethodCallWithDefaultParameterTests.cs" />
    <Compile Include="CSharp\Diagnostics\BaseMethodParameterNameMismatchTests.cs" />
    <Compile Include="CSharp\Diagnostics\BitwiseOperatorOnEnumWithoutFlagsTests.cs" />
    <Compile Include="CSharp\Diagnostics\CallToObjectEqualsViaBaseTests.cs" />
    <Compile Include="CSharp\Diagnostics\CheckNamespaceTests.cs" />
    <Compile Include="CSharp\Diagnostics\CompareNonConstrainedGenericWithNullTests.cs" />
    <Compile Include="CSharp\Diagnostics\CompareOfFloatsByEqualityOperatorTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConditionalTernaryEqualBranchTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConditionIsAlwaysTrueOrFalseTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConstantConditionTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConstantNullCoalescingConditionTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertClosureToMethodGroupTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertIfDoToWhileTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertIfStatementToSwitchStatementTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertIfToAndExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertIfToOrExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertNullableToShortFormTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertToConstantTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertToLambdaExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\ConvertToStaticTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\CS1573ParameterHasNoMatchingParamTagTests.cs" />
    <Compile Include="CSharp\Diagnostics\CSharpDiagnosticTestBase.cs" />
    <Compile Include="CSharp\Diagnostics\DelegateSubtractionTests.cs" />
    <Compile Include="CSharp\Diagnostics\DoNotCallOverridableMethodsInConstructorTests.cs" />
    <Compile Include="CSharp\Diagnostics\DoubleNegationOperatorTests.cs" />
    <Compile Include="CSharp\Diagnostics\EmptyConstructorTests.cs" />
    <Compile Include="CSharp\Diagnostics\EmptyDestructorTests.cs" />
    <Compile Include="CSharp\Diagnostics\EmptyEmbeddedStatementTests.cs" />
    <Compile Include="CSharp\Diagnostics\EmptyGeneralCatchClauseTests.cs" />
    <Compile Include="CSharp\Diagnostics\EmptyNamespaceTests.cs" />
    <Compile Include="CSharp\Diagnostics\EmptyStatementIssueTests.cs" />
    <Compile Include="CSharp\Diagnostics\EnumUnderlyingTypeIsIntTests.cs" />
    <Compile Include="CSharp\Diagnostics\EqualExpressionComparisonTests.cs" />
    <Compile Include="CSharp\Diagnostics\EventUnsubscriptionViaAnonymousDelegateTests.cs" />
    <Compile Include="CSharp\Diagnostics\ForCanBeConvertedToForeachTests.cs" />
    <Compile Include="CSharp\Diagnostics\ForControlVariableIsNeverModifiedTests.cs" />
    <Compile Include="CSharp\Diagnostics\FormatStringProblemTests.cs" />
    <Compile Include="CSharp\Diagnostics\ForStatementConditionIsTrueTests.cs" />
    <Compile Include="CSharp\Diagnostics\FunctionNeverReturnsTests.cs" />
    <Compile Include="CSharp\Diagnostics\LocalVariableHidesMemberTests.cs" />
    <Compile Include="CSharp\Diagnostics\LockThisTests.cs" />
    <Compile Include="CSharp\Diagnostics\LongLiteralEndingLowerLTests.cs" />
    <Compile Include="CSharp\Diagnostics\MemberCanBeMadeStaticTests.cs" />
    <Compile Include="CSharp\Diagnostics\MemberHidesStaticFromOuterClassTests.cs" />
    <Compile Include="CSharp\Diagnostics\MethodOverloadWithOptionalParameterTests.cs" />
    <Compile Include="CSharp\Diagnostics\NameOfSuggestionTests.cs" />
    <Compile Include="CSharp\Diagnostics\NegativeRelationalExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\NonPublicMethodWithTestAttributeTests.cs" />
    <Compile Include="CSharp\Diagnostics\NonReadonlyReferencedInGetHashCodeTests.cs" />
    <Compile Include="CSharp\Diagnostics\NotImplementedExceptionInspectorTests.cs" />
    <Compile Include="CSharp\Diagnostics\NotResolvedInTextTests.cs" />
    <Compile Include="CSharp\Diagnostics\ObjectCreationAsStatementTests.cs" />
    <Compile Include="CSharp\Diagnostics\OperatorIsCanBeUsedTests.cs" />
    <Compile Include="CSharp\Diagnostics\OptionalParameterHierarchyMismatchTests.cs" />
    <Compile Include="CSharp\Diagnostics\OptionalParameterRefOutTests.cs" />
    <Compile Include="CSharp\Diagnostics\ParameterCanBeDemotedIssue\ParameterCanBeDeclaredWithBaseTypeIssueTests.cs" />
    <Compile Include="CSharp\Diagnostics\ParameterHidesMemberTests.cs" />
    <Compile Include="CSharp\Diagnostics\ParameterOnlyAssignedTests.cs" />
    <Compile Include="CSharp\Diagnostics\PartialMethodParameterNameMismatchTests.cs" />
    <Compile Include="CSharp\Diagnostics\PartialTypeWithSinglePartTests.cs" />
    <Compile Include="CSharp\Diagnostics\PolymorphicFieldLikeEventInvocationTests.cs" />
    <Compile Include="CSharp\Diagnostics\PossibleAssignmentToReadonlyFieldTests.cs" />
    <Compile Include="CSharp\Diagnostics\PossibleMistakenCallToGetTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\PossibleMultipleEnumerationTests.cs" />
    <Compile Include="CSharp\Diagnostics\PublicConstructorInAbstractClassTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantAnonymousTypePropertyNameTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantArgumentDefaultValueTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantArgumentNameTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantAssignmentIssueTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantAttributeParenthesesTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantBaseConstructorTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantBaseQualifierTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantBoolCompareTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantCaseLabelTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantCatchClauseTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantCheckBeforeAssignmentTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantCommaInArrayInitializerTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantComparisonWithNullTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantDefaultFieldInitializerTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantDelegateCreationTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantEmptyDefaultSwitchBranchTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantEmptyFinallyBlockTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantEnumerableCastCallTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantExplicitArrayCreationTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantExplicitArraySizeTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantExplicitNullableCreationTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantExtendsListEntryTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantIfElseBlockTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantLambdaParameterTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantLambdaSignatureParenthesesTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantLogicalConditionalExpressionOperandTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantObjectCreationArgumentListTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantObjectOrCollectionInitializerTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantOverriddenMemberTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantStringToCharArrayCallTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantTernaryExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantToStringCallTests.cs" />
    <Compile Include="CSharp\Diagnostics\RedundantUnsafeContextTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReferenceEqualsWithValueTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\RemoveRedundantOrStatementTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithFirstOrDefaultTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithLastOrDefaultTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithOfTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithOfTypeLinqTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithSimpleAssignmentTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithSingleCallToLinqTests.cs" />
    <Compile Include="CSharp\Diagnostics\ReplaceWithStringIsNullOrEmptyTests.cs" />
    <Compile Include="CSharp\Diagnostics\RoslynUsageTests.cs" />
    <Compile Include="CSharp\Diagnostics\SealedMemberInSealedClassTests.cs" />
    <Compile Include="CSharp\Diagnostics\SimplifyConditionalTernaryExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\StaticEventSubscriptionTests.cs" />
    <Compile Include="CSharp\Diagnostics\StaticFieldOrAutoPropertyInGenericTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\StaticMethodInvocationToExtensionMethodInvocationTests.cs" />
    <Compile Include="CSharp\Diagnostics\StringCompareIsCultureSpecificTests.cs" />
    <Compile Include="CSharp\Diagnostics\StringCompareToIsCultureSpecificTests.cs" />
    <Compile Include="CSharp\Diagnostics\StringEndsWithIsCultureSpecificTests.cs" />
    <Compile Include="CSharp\Diagnostics\StringIndexOfIsCultureSpecificTests.cs" />
    <Compile Include="CSharp\Diagnostics\StringLastIndexOfIsCultureSpecificTests.cs" />
    <Compile Include="CSharp\Diagnostics\StringStartsWithIsCultureSpecificTests.cs" />
    <Compile Include="CSharp\Diagnostics\ThreadStaticAtInstanceFieldTests.cs" />
    <Compile Include="CSharp\Diagnostics\UnusedAnonymousMethodSignatureTests.cs" />
    <Compile Include="CSharp\Diagnostics\UnusedParameterTests.cs" />
    <Compile Include="CSharp\Diagnostics\UnusedTypeParameterTests.cs" />
    <Compile Include="CSharp\Diagnostics\UseArrayCreationExpressionTests.cs" />
    <Compile Include="CSharp\Diagnostics\UseIsOperatorTests.cs" />
    <Compile Include="CSharp\Diagnostics\UseMethodAnyTests.cs" />
    <Compile Include="CSharp\Diagnostics\UseMethodIsInstanceOfTypeTests.cs" />
    <Compile Include="CSharp\Diagnostics\ValueParameterNotUsedTests.cs" />
    <Compile Include="CSharp\Diagnostics\XmlDocTests.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SymbolChecksTest.cs" />
    <Compile Include="VB\CodeRefactorings\AddAnotherAccessorTests.cs" />
    <Compile Include="VB\CodeRefactorings\AddCheckForNothingTests.cs" />
    <Compile Include="VB\CodeRefactorings\CheckDictionaryKeyValueTests.cs" />
    <Compile Include="VB\CodeRefactorings\CheckIfParameterIsNothingTests.cs" />
    <Compile Include="VB\CodeRefactorings\ComputeConstantValueTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertDecToHexTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertDoLoopWhileToDoWhileLoopTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertDoWhileLoopToDoLoopWhileTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertHexToDecTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertIfStatementToSelectCaseStatementTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertSelectCaseToIfTests.cs" />
    <Compile Include="VB\CodeRefactorings\ConvertToCustomEventTests.cs" />
    <Compile Include="VB\CodeRefactorings\CopyCommentsFromBaseTests.cs" />
    <Compile Include="VB\CodeRefactorings\CreateChangedEventTests.cs" />
    <Compile Include="VB\CodeRefactorings\CreateOverloadWithoutParameterTests.cs" />
    <Compile Include="VB\CodeRefactorings\InvertLogicalExpressionTests.cs" />
    <Compile Include="VB\CodeRefactorings\ReplaceDirectCastWithSafeCastTests.cs" />
    <Compile Include="VB\CodeRefactorings\ReplaceSafeCastWithDirectCastTests.cs" />
    <Compile Include="VB\CodeRefactorings\VBCodeRefactoringTestBase.cs" />
    <Compile Include="VB\Converter\ExpressionTests.cs" />
    <Compile Include="VB\Converter\MemberTests.cs" />
    <Compile Include="VB\Converter\NamespaceLevelTests.cs" />
    <Compile Include="VB\Converter\SpecialConversionTests.cs" />
    <Compile Include="VB\Converter\StatementTests.cs" />
    <Compile Include="VB\Converter\TypeCastTests.cs" />
    <Compile Include="VB\Diagnostics\NameOfSuggestionTests.cs" />
    <Compile Include="VB\Diagnostics\NonPublicMethodWithTestAttributeTests.cs" />
    <Compile Include="VB\Diagnostics\VBDiagnosticTestBase.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\RefactoringEssentials\RefactoringEssentials.csproj">
      <Project>{18236d33-b3e1-45dc-99e7-230633a228b6}</Project>
      <Name>RefactoringEssentials</Name>
    </ProjectReference>
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <TextStylePolicy TabWidth="4" IndentWidth="4" RemoveTrailingWhitespace="True" NoTabsAfterNonTabs="False" EolMarker="Native" FileWidth="80" TabsToSpaces="True" scope="text/x-csharp" />
          <CSharpFormattingPolicy IndentBlock="True" IndentBraces="False" IndentSwitchSection="True" IndentSwitchCaseSection="True" LabelPositioning="OneLess" NewLinesForBracesInTypes="True" NewLinesForBracesInMethods="True" NewLinesForBracesInProperties="True" NewLinesForBracesInAnonymousMethods="True" NewLinesForBracesInControlBlocks="True" NewLinesForBracesInAnonymousTypes="True" NewLinesForBracesInObjectCollectionArrayInitializers="True" NewLinesForBracesInLambdaExpressionBody="True" NewLineForElse="True" NewLineForCatch="True" NewLineForFinally="True" NewLineForMembersInObjectInit="True" NewLineForMembersInAnonymousTypes="True" NewLineForClausesInQuery="True" SpacingAfterMethodDeclarationName="False" SpaceWithinMethodDeclarationParenthesis="False" SpaceBetweenEmptyMethodDeclarationParentheses="False" SpaceAfterMethodCallName="False" SpaceWithinMethodCallParentheses="False" SpaceBetweenEmptyMethodCallParentheses="False" SpaceAfterControlFlowStatementKeyword="True" SpaceWithinExpressionParentheses="False" SpaceWithinCastParentheses="False" SpaceWithinOtherParentheses="False" SpaceAfterCast="False" SpacesIgnoreAroundVariableDeclaration="False" SpaceBeforeOpenSquareBracket="False" SpaceBetweenEmptySquareBrackets="False" SpaceWithinSquareBrackets="False" SpaceAfterColonInBaseTypeDeclaration="True" SpaceAfterComma="True" SpaceAfterDot="False" SpaceAfterSemicolonsInForStatement="True" SpaceBeforeColonInBaseTypeDeclaration="True" SpaceBeforeComma="False" SpaceBeforeDot="False" SpaceBeforeSemicolonsInForStatement="False" SpacingAroundBinaryOperator="Single" WrappingPreserveSingleLine="True" WrappingKeepStatementsOnSingleLine="True" PlaceSystemDirectiveFirst="True" NewLinesForBracesInAccessors="False" scope="text/x-csharp" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
  <Import Project="..\packages\xunit.core.2.3.1\build\xunit.core.targets" Condition="Exists('..\packages\xunit.core.2.3.1\build\xunit.core.targets')" />
</Project>